<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="metroTextBox2.Icon" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>